#
# Global
#

define command {
    command_name            checkPostgreSQLArchiveReadyWALFiles
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=archive_ready --warning=10 --critical=30 --showtime=0
}

define command {
    command_name            checkPostgreSQLAutovacuumFreeze
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=autovac_freeze --exclude=~^template,postgres --warning=80% --critical=90% --showtime=0
}

define command {
    command_name            checkPostgreSQLCacheHitRatio
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=hitratio --warning=90% --critical=80% --showtime=0
}

define command {
    command_name            checkPostgreSQLCommitRatio
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=commitratio --warning=90% --critical=80% --showtime=0
}

define command {
    command_name            checkPostgreSQLConnections
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=backends --warning=50% --critical=80% --showtime=0 --exclude=~^template
}

define command {
    command_name            checkPostgreSQLLocks
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=locks --warning=waiting=1,exclusive=10,total=1000 --critical=waiting=10,exclusive=100,total=10000 --showtime=0
}

define command {
    command_name            checkPostgreSQLNewVersion
    command_line            $USER2$/sanitize.sh $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=new_version_pg
}

define command {
    command_name            checkPostgreSQLReplicationLag
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$ARG1$ --host=$HOSTADDRESS$ --dbuser=nagios --action=hot_standby_delay --warning=10000000 --critical=100000000 --showtime=0
    ;$ARG1$                 Master host address
}

define command {
    command_name            checkPostgreSQLTimeDifference
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=timesync  --warning=10 --critical=30 --showtime=0
}

define command {
    command_name            checkPostgreSQLWALFiles
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=wal_files --warning=500 --critical=1000 --showtime=0
}

#
# Parameterized
#

define command {
    command_name            checkPostgreSQLQueries
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=query_time --warning=$ARG1$ --critical=$ARG2$ --showtime=0 --timeout=30
    ;$ARG1$                 Warning limit
    ;$ARG2$                 Critical limit
}

define command {
    command_name            checkPostgreSQLTransactions
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=txn_time --warning=$ARG1$ --critical=$ARG2$ --showtime=0
    ;$ARG1$                 Warning limit
    ;$ARG2$                 Critical limit
}

define command {
    command_name            checkPostgreSQLIdleTransactions
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=txn_idle --warning=$ARG1$ --critical=$ARG2$ --showtime=0
    ;$ARG1$                 Warning limit
    ;$ARG2$                 Critical limit
}

define command {
    command_name            checkPostgreSQLPreparedTransactions
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=prepared_txns --warning=$ARG1$ --critical=$ARG2$ --showtime=0
    ;$ARG1$                 Warning limit
    ;$ARG2$                 Critical limit
}

#
# Database spesific
#

define command {
    command_name            checkPostgreSQLBloat
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=bloat --dbname=$ARG1$ --warning=3G --showtime=0
    ;$ARG1$                 Database name
}

define command {
    command_name            checkPostgreSQLDisabledTriggers
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=disabled_triggers --dbname=$ARG1$ --warning=1 --showtime=0
    ;$ARG1$                 Database name
}

define command {
    command_name            checkPostgreSQLIndexSize
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=index_size --dbname=$ARG1$ --warning=6G --showtime=0 --excludeuser=postgres
    ;$ARG1$                 Database name
}

define command {
    command_name            checkPostgreSQLQueryRuntime
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=query_runtime --dbname=$ARG1$ --queryname=$ARG2$ --warning=30 --showtime=0
    ;$ARG1$                 Database name
    ;$ARG2$                 Query
}

define command {
    command_name            checkPostgreSQLSameSchema
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=same_schema --host=$ARG1$ --dbname=$ARG2$ --showper=0 --filter=nosequence
    ;$ARG1$                 Master host address
    ;$ARG2$                 Database name
}

define command {
    command_name            checkPostgreSQLSequenceLimit
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=sequence --dbname=$ARG1$ --warning=70% --critical=95% --showtime=0
    ;$ARG1$                 Database name
}

define command {
    command_name            checkPostgreSQLTableSize
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --dbuser=nagios --action=table_size --dbname=$ARG1$ --warning=12G --showtime=0 --excludeuser=postgres
    ;$ARG1$                 Database name
}

#
# PgBouncer
#

define command {
    command_name            checkPgBouncerConnections
    command_line            $USER2$/check_postgres/check_postgres.pl --host=$HOSTADDRESS$ --port=6432 --dbuser=nagios --dbpass=$USER3$ --action=pgbouncer_backends --warning=50% --critical=80% --showtime=0
}

#
# Check_postgres
#

define command {
    command_name            checkCheckPostgresNewVersion
    command_line            $USER2$/sanitize.sh $USER2$/check_postgres/check_postgres.pl --action=new_version_cp
}

